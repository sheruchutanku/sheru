name: aks6

on:
  push:
    branches: none # [ main ]
    paths: .github/workflows/aks6.yml
  pull_request:
    branches:  none # [ release ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  LOCATION: eastus2
  INFRA_RESOURCE_GROUP: tutorial
  TF_STATE_STORAGE_ACCOUNT_NAME: tt421
  TF_STATE_CONTAINER_NAME: tfstate
  TF_STATE_FILE_NAME: aks6.tfstate
  TF_STATE_ACCESS_KEY: "" # will be set later
  DOCKER_REPOSITORY: harishnarang2018
  IMAGE_NAME: kopal
  IMAGE_TAG: ${{ github.run_number }}
  AKS_RESOURCE_GROUP: tutorial
  WORKING_DIRECTORY: infra1 
  AKS_NAME: aks1
  ACR_NAME: acr047
  AZURE_CONFIG_DIR: "/tmp/azconfig"
  AZURE_CORE_COLLECT_TELEMETRY: "false"
jobs:
  build-and-deploy:
    name: Build and deploy into AKS
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Azure with SPN
      uses: azure/CLI@v1
      with:
        azcliversion: 2.64.0
        inlineScript: |
          az login --service-principal -u ${{ secrets.AZURE_SP_CLIENT_ID }} -p ${{ secrets.AZURE_SP_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
       
    - uses: hashicorp/setup-terraform@v1
      name: Setup Terraform
      with:
        terraform_version: 1.7.5 # 1.0.6 #
 
    - name: Terraform fmt
      id: fmt
      run: terraform fmt
#      working-directory: infra1
      continue-on-error: true
 
    - name: Terraform Init (Azure Backend)
      id: init
      env:
        AZURE_CONFIG_DIR: "/tmp/azconfig"        # custom writable location
        AZURE_CORE_COLLECT_TELEMETRY: "false"    # disable telemetry/version check
      run: | 
        terraform init \
          -backend-config="resource_group_name=back" \
          -backend-config="storage_account_name=tt421" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=aks6.tfstate"
#      working-directory: infra1
 
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
#      working-directory: infra1
 
    - name: Terraform Plan
      id: plan
      run: terraform plan -out out.plan -var-file="terraform.tfvars"
#      working-directory: infra1
      continue-on-error: true
 
    - name: Terraform Apply
      # if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve out.plan
#      working-directory: infra1

    - name: Build Docker Image
      working-directory: .
      run:
        docker build ./MvcApp/ --file ./MvcApp/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER  --no-cache
  
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin

    - name: Push Image to Docker Hub
      run:
        docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

    - name: Replace Image Name in Deployment
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["kubernetes/*.yaml"]'
        tokenPrefix: __ # optional, default is #{
        tokenSuffix: __ # optional, default is }#
      env:
        DOCKER_REPOSITORY: ${{ env.DOCKER_REPOSITORY }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}

    - name: Set AKS context (no creds needed)
      run: |
        az aks get-credentials \
          --resource-group ${{ env.AKS_RESOURCE_GROUP }} \
          --name ${{ env.AKS_NAME }} \
          --overwrite-existing

    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          kubernetes/nginx1.yaml
