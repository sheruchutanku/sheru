name: Create Azure Installation With Terraform (UAMI)
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./AKS
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
       
#      - name: Azure Login with Managed Identity (UAMI)
#        run: |
#          az login --identity --client ${{ secrets.AZURE_CLIENT_ID }}

 #     - name: Set Terraform Environment Variables
 #       run: |
 #         echo "ARM_USE_MSI=true" >> $GITHUB_ENV
 #         ARM_USE_AZUREAD: true
 #         echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
 #         echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
 #         echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  

#      - name: Terraform Init
#        id: init
#        run: terraform init -backend-config="resource_group_name=back" -backend-config="storage_account_name=tt420" -backend-config="container_name=tfstate"
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=back" \
            -backend-config="storage_account_name=tt420" \
            -backend-config="container_name=tfstate"
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  
      - name: Terraform Validate
        id: validate
        run: terraform validate
       
      - name: Terraform Plan
        id: plantt420
        run: terraform plan -out=tfplan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  
      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output
